[{"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\index.js":"1","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\store.js":"2","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reportWebVitals.js":"3","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\App.js":"4","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\productReducers.js":"5","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\cartReducers.js":"6","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\userReducers.js":"7","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\OrderListPage.js":"8","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\orderReducers.js":"9","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\LoginPage.js":"10","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\RegisterPage.js":"11","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\HomePage.js":"12","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\OrderPage.js":"13","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ShippingPage.js":"14","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductEditPage.js":"15","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductListPage.js":"16","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductCreatePage.js":"17","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\PaymentPage.js":"18","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProfilePage.js":"19","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductPage.js":"20","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\UserListPage.js":"21","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\UserEditPage.js":"22","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\PlaceOrderPage.js":"23","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Header.js":"24","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Footer.js":"25","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\CartPage.js":"26","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Message.js":"27","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Loader.js":"28","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Product.js":"29","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Paginate.js":"30","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Meta.js":"31","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\cartActions.js":"32","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\orderActions.js":"33","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\productActions.js":"34","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\FormContainer.js":"35","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\CheckoutSteps.js":"36","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\userActions.js":"37","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\SearchBox.js":"38","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Midtrans.js":"39","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\shippingReducers.js":"40","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\utils\\rupiahFormat.js":"41","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\shippingActions.js":"42"},{"size":593,"mtime":1612180248711,"results":"43","hashOfConfig":"44"},{"size":2339,"mtime":1612177920210,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":2772,"mtime":1611290838471,"results":"47","hashOfConfig":"44"},{"size":2246,"mtime":1612181661100,"results":"48","hashOfConfig":"44"},{"size":1131,"mtime":1609809308347,"results":"49","hashOfConfig":"44"},{"size":2979,"mtime":1611290838564,"results":"50","hashOfConfig":"44"},{"size":2594,"mtime":1611655336166,"results":"51","hashOfConfig":"44"},{"size":2973,"mtime":1612334877744,"results":"52","hashOfConfig":"44"},{"size":2207,"mtime":1611744042178,"results":"53","hashOfConfig":"44"},{"size":3216,"mtime":1610878853144,"results":"54","hashOfConfig":"44"},{"size":1583,"mtime":1611399391531,"results":"55","hashOfConfig":"44"},{"size":6887,"mtime":1612408116288,"results":"56","hashOfConfig":"44"},{"size":7151,"mtime":1612413847390,"results":"57","hashOfConfig":"44"},{"size":6599,"mtime":1611290838544,"results":"58","hashOfConfig":"44"},{"size":4344,"mtime":1611290838545,"results":"59","hashOfConfig":"44"},{"size":5921,"mtime":1611290838543,"results":"60","hashOfConfig":"44"},{"size":1814,"mtime":1609809308324,"results":"61","hashOfConfig":"44"},{"size":5750,"mtime":1611655336205,"results":"62","hashOfConfig":"44"},{"size":4460,"mtime":1612413053232,"results":"63","hashOfConfig":"44"},{"size":3015,"mtime":1611290838560,"results":"64","hashOfConfig":"44"},{"size":3234,"mtime":1611290838559,"results":"65","hashOfConfig":"44"},{"size":4617,"mtime":1612415464201,"results":"66","hashOfConfig":"44"},{"size":2602,"mtime":1611290838502,"results":"67","hashOfConfig":"44"},{"size":343,"mtime":1609809308292,"results":"68","hashOfConfig":"44"},{"size":3545,"mtime":1612414909356,"results":"69","hashOfConfig":"44"},{"size":197,"mtime":1607262565266,"results":"70","hashOfConfig":"44"},{"size":403,"mtime":1607816365584,"results":"71","hashOfConfig":"44"},{"size":851,"mtime":1612410323873,"results":"72","hashOfConfig":"44"},{"size":772,"mtime":1611290838503,"results":"73","hashOfConfig":"44"},{"size":465,"mtime":1609809308292,"results":"74","hashOfConfig":"44"},{"size":1121,"mtime":1612404994574,"results":"75","hashOfConfig":"44"},{"size":5078,"mtime":1611860253594,"results":"76","hashOfConfig":"44"},{"size":4662,"mtime":1611290838489,"results":"77","hashOfConfig":"44"},{"size":345,"mtime":1607812335162,"results":"78","hashOfConfig":"44"},{"size":1316,"mtime":1612328096733,"results":"79","hashOfConfig":"44"},{"size":6381,"mtime":1611290838490,"results":"80","hashOfConfig":"44"},{"size":775,"mtime":1609321502357,"results":"81","hashOfConfig":"44"},{"size":3273,"mtime":1611462458026,"results":"82","hashOfConfig":"44"},{"size":957,"mtime":1612323018091,"results":"83","hashOfConfig":"44"},{"size":248,"mtime":1612411449764,"results":"84","hashOfConfig":"44"},{"size":2220,"mtime":1612382875997,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"16nfr9n",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\index.js",[],["179","180"],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\store.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reportWebVitals.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\App.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\productReducers.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\cartReducers.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\userReducers.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\OrderListPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\orderReducers.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\LoginPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\RegisterPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\HomePage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\OrderPage.js",["181","182","183","184","185","186","187","188"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { payOrder, midtransPay, deliverOrder } from '../actions/orderActions'\r\nimport queryString from 'query-string';\r\n// import { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderPage = ({ match, history, location }) => {\r\n  const orderId = match.params.id\r\n\r\n  const queryParams = queryString.parse(location.search);\r\n  console.log(queryParams);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // order.itemsPrice = addDecimals(\r\n    //   order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    // )\r\n  }\r\n\r\n  // no payment\r\n  // useEffect(() => {\r\n  //   dispatch(getOrderDetails(orderId))\r\n  //   console.log('dispact getOrderDetails')\r\n  // }, [dispatch, orderId])\r\n\r\n  const midtransHandler = () => {\r\n    console.log(queryParams)\r\n    dispatch(payOrder(queryParams.order_id, {\r\n      transaction_status: queryParams.transaction_status,\r\n      payment_method: \"midtrans\"\r\n    }))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n        <>\r\n          <h1>Order {order.orderId}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  {/* <p>\r\n                    <strong>Name: </strong> {order.user.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email: </strong>{' '}\r\n                    <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                  </p> */}\r\n                  <p>\r\n                    <strong>Address:</strong>\r\n                    {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                    {order.shippingAddress.postalCode},{' '}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  {order.delivered ? (\r\n                    <Message variant='success'>\r\n                      Delivered on {order.deliveredAt}\r\n                    </Message>\r\n                  ) : (\r\n                      <Message variant='danger'>Not Delivered</Message>\r\n                    )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.paymentMethod}\r\n                  </p>\r\n                  {order.paid ? (\r\n                    <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                  ) : (\r\n                      <Message variant='danger'>Not Paid</Message>\r\n                    )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Order Items</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Order is empty</Message>\r\n                  ) : (\r\n                      <ListGroup variant='flush'>\r\n                        {order.orderItems.map((item, index) => (\r\n                          <ListGroup.Item key={index}>\r\n                            <Row>\r\n                              <Col md={1}>\r\n                                <Image\r\n                                  src={item.image}\r\n                                  alt={item.name}\r\n                                  fluid\r\n                                  rounded\r\n                                />\r\n                              </Col>\r\n                              <Col>\r\n                                <Link to={`/product/${item.product}`}>\r\n                                  {item.name}\r\n                                </Link>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      href={order.redirect_url}\r\n                    >\r\n                      Pembayaran\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n\r\n                  {loadingDeliver && <Loader />}\r\n                  {userInfo.admin && order.paid && !order.delivered && (\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        type='button'\r\n                        className='btn btn-block'\r\n                        onClick={deliverHandler}\r\n                      >\r\n                        Mark As Delivered\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )\r\n}\r\n\r\nexport default OrderPage","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ShippingPage.js",["189","190","191","192","193","194","195","196"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Form, Button, Col, Row, ListGroup, Table, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport uuid from 'react-uuid'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport { rupiahFormat } from '../utils/rupiahFormat'\r\nimport {\r\n  cityAllActionCreator,\r\n  provAllActionCreator,\r\n  cityInProvActionCreator,\r\n  minShippingActionCreator,\r\n  allShippingActionCreator\r\n} from '../actions/shippingActions'\r\n\r\nconst ShippingPage = (props) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  // const [address, setAddress] = useState(shippingAddress.address)\r\n  // const [city, setCity] = useState(shippingAddress.city)\r\n  // const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  // const [country, setCountry] = useState(shippingAddress.country)\r\n  const [couriers, setCouriers] = useState([])\r\n  const provRef = useRef(null)\r\n  const cityToRef = useRef(null)\r\n  const kurirRef = useRef(null)\r\n\r\n  const [address, setAddress] = useState('')\r\n  const [selectedProv, setSelectedProv] = useState('')\r\n  const [selectedCity, setSelectedCity] = useState('')\r\n\r\n  const { history, state, cityAllAction, provAllAction, cityInProvAction, minShippingAction, allShippingAction } = props\r\n  const shippingCost = !state.btnDisabled && state.cost.flat(Infinity)[0]\r\n\r\n  useEffect(() => {\r\n    cityAllAction()\r\n    provAllAction()\r\n  }, [])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({\r\n      fullAddress: address + ', ' + selectedCity.type + ' ' + selectedCity.city_name + ' ' + ' Provinsi ' + selectedProv,\r\n      shippingPrice: state.minCost.value,\r\n      estimated: state.minCost.etd\r\n    }))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  const onSelectProvince = () => {\r\n    console.log('provRef: ', provRef.current.value)\r\n    cityInProvAction(provRef.current.value)\r\n    setCouriers(['JNE', 'TIKI', 'POS'])\r\n    setSelectedProv(state.prov[provRef.current.value - 1].province)\r\n    setSelectedCity('')\r\n  }\r\n\r\n  const onSelectCity = () => {\r\n    console.log('cityToRef: ', cityToRef.current.value)\r\n    minShippingAction({\r\n      destination: cityToRef.current.value,\r\n      weight: 1000,\r\n      courier: kurirRef.current.value,\r\n    })\r\n    setSelectedCity(state.city[cityToRef.current.value - 1])\r\n  }\r\n\r\n  // const onAddressChange = () => {\r\n  //   setFullAddress(address + ', ' + selectedCity.type + selectedCity.city_name + selectedProv)\r\n  // }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h3>Alamat Pengiriman</h3>\r\n      <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Provinsi Tujuan</Form.Label>\r\n          <Form.Control as=\"select\" ref={provRef} onChange={onSelectProvince} required>\r\n            {state.cityInProv.length < 1 && <option value=\"pilih provinsi\">Pilih Provinsi Tujuan</option>}\r\n            {state.prov.map((p) => (\r\n              <option key={p.province_id} value={p.province_id}>\r\n                {p.province}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Kota/Kabupaten Tujuan</Form.Label>\r\n          <Form.Control as=\"select\" ref={cityToRef} onChange={onSelectCity} required>\r\n            <option value=\"pilih kabupaten\">Pilih Kota/Kabupaten Tujuan</option>\r\n            {state.cityInProv.map((k) => (\r\n              <option key={k.city_id} value={k.city_id}>\r\n                {k.city_name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Detail Alamat</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Nama Jalan, RT RW, Kelurahan, Kecamatan'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Jasa Pengiriman</Form.Label>\r\n          <Form.Control as=\"select\" ref={kurirRef} required>\r\n            {state.cityInProv.length < 1 && <option value=\"pilih jasa pengiriman\">Pilih Jasa Pengiriman</option>}\r\n            {couriers.map((c) => (\r\n              <option key={uuid()} value={c}>\r\n                {c}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* <Form.Group>\r\n          <Form.Label>Jumlah Berat (Kg)</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            ref={beratRef}\r\n            placeholder=\"Masukan Jumlah Berat\"\r\n            required\r\n          />\r\n        </Form.Group> */}\r\n\r\n        {/* <p>Alamat Lengkap: {address}, {selectedCity.type} {selectedCity.city_name}, {selectedProv} </p>\r\n        <h6>Biaya pengiriman: {rupiahFormat(state.minCost.value)}</h6>\r\n        <h6>Waktu pengiriman: {state.minCost.etd}</h6>\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='primary'>\r\n          Continue\r\n        </Button> */}\r\n\r\n\r\n      <ListGroup variant='flush'>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col md={4}>Alamat Lengkap:</Col>\r\n            <Col>\r\n              {address}, {selectedCity.type} {selectedCity.city_name}, {selectedProv}\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col md={4}>Biaya Pengiriman:</Col>\r\n            <Col>\r\n              {rupiahFormat(state.minCost.value)}\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col md={4}>Lama Pengiriman:</Col>\r\n            <Col>\r\n              {state.minCost.etd} hari\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </ListGroup>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nShippingPage.propTypes = {\r\n  history: PropTypes.object,\r\n  state: PropTypes.object,\r\n  cityAllAction: PropTypes.func,\r\n  provAllAction: PropTypes.func,\r\n  cityInProvAction: PropTypes.func,\r\n  minShippingAction: PropTypes.func,\r\n  allShippingAction: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state.shipping\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  cityAllAction: () => dispatch(cityAllActionCreator()),\r\n  provAllAction: () => dispatch(provAllActionCreator()),\r\n  cityInProvAction: (provId) => dispatch(cityInProvActionCreator(provId)),\r\n  minShippingAction: (shippingData) => dispatch(minShippingActionCreator(shippingData)),\r\n  allShippingAction: (type, payload) => dispatch(allShippingActionCreator(type, { ...payload }))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingPage)","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductEditPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductListPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductCreatePage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\PaymentPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProfilePage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\ProductPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\UserListPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\UserEditPage.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\PlaceOrderPage.js",["197","198"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { rupiahFormat } from '../utils/rupiahFormat'\r\n\r\nconst PlaceOrderPage = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  if (!cart.shippingAddress.fullAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order.orderId}`)\r\n      dispatch({ type: 'USER_DETAILS_RESET' })\r\n      dispatch({ type: 'ORDER_CREATE_RESET' })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress.fullAddress,\r\n        paymentMethod: \"midtrans\",\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col md={3}>\r\n                  Address:\r\n                </Col>\r\n                <Col md={9}>\r\n                  {cart.shippingAddress.fullAddress}\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                  <ListGroup variant='flush'>\r\n                    {cart.cartItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            {item.name}\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            {item.qty} x {rupiahFormat(item.price)} = {rupiahFormat(item.qty * item.price)}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>{rupiahFormat(cart.itemsPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>{rupiahFormat(cart.shippingAddress.shippingPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>{rupiahFormat(cart.totalPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderPage","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Header.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Footer.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\pages\\CartPage.js",["199"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport { rupiahFormat } from '../utils/rupiahFormat'\r\n\r\nconst CartPage = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  const tatalPrice = cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n\r\n                  <Col md={5}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={3}>{rupiahFormat(item.price)}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              <h5>{rupiahFormat(tatalPrice)}</h5>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartPage","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Message.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Loader.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Product.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Paginate.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Meta.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\cartActions.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\orderActions.js",["200"],"import axios from 'axios'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_CREATE_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_CREATE_SUCCESS',\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: 'CART_CLEAR_ITEMS',\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: 'ORDER_CREATE_FAIL',\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_DETAILS_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_DETAILS_SUCCESS',\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: 'ORDER_DETAILS_FAIL',\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_PAY_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`, paymentResult, config\r\n    )\r\n\r\n    dispatch({\r\n      type: 'ORDER_PAY_SUCCESS',\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'ORDER_PAY_FAIL',\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_DELIVER_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order.orderId}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: 'ORDER_DELIVER_SUCCESS',\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: 'ORDER_DELIVER_FAIL',\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_LIST_MY_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_LIST_MY_SUCCESS',\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: 'ORDER_LIT_MY_FAIL',\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_LIST_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_LIST_SUCCESS',\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: 'ORDER_LIST_FAIL',\r\n      payload: message,\r\n    })\r\n  }\r\n}","E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\productActions.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\FormContainer.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\CheckoutSteps.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\userActions.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\SearchBox.js",[],["201","202"],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\components\\Midtrans.js",["203"],"import { cloneElement, PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst { oneOfType, arrayOf, node, func, string } = PropTypes\r\n\r\nexport default class SnapMidtrans extends PureComponent {\r\n  state = {\r\n    children: null,\r\n    token: '',\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return nextProps.token !== prevState.token\r\n      ? { token: nextProps.token }\r\n      : null\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    // const { NODE_ENV: ENV } = process.env\r\n\r\n    // bind react-midtrans method\r\n    this.mergeWithChildren = this.mergeWithChildren.bind(this)\r\n    // backup currentview\r\n    this.currentViewport = document\r\n      .getElementsByTagName('meta')\r\n      .hasOwnProperty('viewport')\r\n      ? document.getElementsByTagName('meta').viewport\r\n      : ''\r\n    // create element for script\r\n    this.snapScript = document.createElement('script')\r\n\r\n    // checking environment mode\r\n    // this.snapScript.src =\r\n    //   ENV === 'production'\r\n    //     ? 'https://app.midtrans.com/snap/snap.js'\r\n    //     : 'https://app.sandbox.midtrans.com/snap/snap.js'\r\n\r\n    this.snapScript.src = 'https://app.sandbox.midtrans.com/snap/snap.js'\r\n\r\n    this.snapScript.type = 'text/javascript'\r\n    this.snapScript.onload = this.onLoad.bind(this)\r\n    this.snapScript.dataset.clientKey = props.clientKey\r\n  }\r\n\r\n  onLoad(e) {\r\n    if ('snap' in window) {\r\n      const { snap } = window\r\n      this.setState({ snap })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.head.appendChild(this.snapScript)\r\n    this.mergeWithChildren(this.props.children)\r\n  }\r\n\r\n  mergeWithChildren(children) {\r\n    children = cloneElement(\r\n      children,\r\n      // Assign new Props\r\n      {\r\n        onClick: () => {\r\n          // If Children have a onClick\r\n          children.onClick && children.onClick()\r\n          if (this.state.token && this.state.token !== '') {\r\n            this.state.snap.pay(\r\n              this.state.token, {\r\n              onSuccess: function (result) { console.log('success'); console.log(result); },\r\n              onPending: function (result) { console.log('pending'); console.log(result); },\r\n              onError: function (result) { console.log('error'); console.log(result); },\r\n              onClose: function () { console.log('customer closed the popup without finishing the payment'); }\r\n            }\r\n            )\r\n          }\r\n          this.props.onClick && this.props.onClick()\r\n        },\r\n      },\r\n    )\r\n\r\n    this.setState({\r\n      children,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return this.state.children\r\n  }\r\n}\r\n\r\n/**\r\n * @module SnapMidtrans\r\n * @param {Object} props\r\n * @property {ReactElement} children - required\r\n * @property {String} token\r\n * @todo 4 callback\r\n * @property {Function} onSuccess\r\n * @property {Function} onError\r\n * @property {Function} onPending\r\n * @property {Function} onClose\r\n */\r\nSnapMidtrans.propTypes = {\r\n  children: oneOfType([arrayOf(node), node]).isRequired,\r\n  // clientKey: string.isRequired,\r\n  // token: string,\r\n\r\n  /* @see @link {https://snap-docs.midtrans.com/#snap-js|Midtrans API 4 Callback} */\r\n  onSuccess: func,\r\n  onPending: func,\r\n  onError: func,\r\n  onClose: func,\r\n\r\n  /* Callback Or Custom onClick */\r\n  onClick: func,\r\n}",["204","205"],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\reducers\\shippingReducers.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\utils\\rupiahFormat.js",[],"E:\\Software\\fullstackjava\\onlineshop\\feshop\\src\\actions\\shippingActions.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"214","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"215","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":23},{"ruleId":"210","severity":1,"message":"216","line":8,"column":20,"nodeType":"212","messageId":"213","endLine":8,"endColumn":31},{"ruleId":"210","severity":1,"message":"217","line":13,"column":9,"nodeType":"212","messageId":"213","endLine":13,"endColumn":16},{"ruleId":"210","severity":1,"message":"218","line":24,"column":45,"nodeType":"212","messageId":"213","endLine":24,"endColumn":59},{"ruleId":"210","severity":1,"message":"219","line":31,"column":11,"nodeType":"212","messageId":"213","endLine":31,"endColumn":22},{"ruleId":"210","severity":1,"message":"220","line":46,"column":9,"nodeType":"212","messageId":"213","endLine":46,"endColumn":24},{"ruleId":"210","severity":1,"message":"221","line":2,"column":45,"nodeType":"212","messageId":"213","endLine":2,"endColumn":50},{"ruleId":"210","severity":1,"message":"222","line":2,"column":52,"nodeType":"212","messageId":"213","endLine":2,"endColumn":57},{"ruleId":"210","severity":1,"message":"223","line":2,"column":59,"nodeType":"212","messageId":"213","endLine":2,"endColumn":63},{"ruleId":"210","severity":1,"message":"224","line":21,"column":11,"nodeType":"212","messageId":"213","endLine":21,"endColumn":26},{"ruleId":"210","severity":1,"message":"225","line":36,"column":94,"nodeType":"212","messageId":"213","endLine":36,"endColumn":111},{"ruleId":"210","severity":1,"message":"226","line":37,"column":9,"nodeType":"212","messageId":"213","endLine":37,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":42,"column":6,"nodeType":"229","endLine":42,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":49,"column":92,"nodeType":"233","messageId":"234","endLine":49,"endColumn":93},{"ruleId":"210","severity":1,"message":"235","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"222","line":3,"column":39,"nodeType":"212","messageId":"213","endLine":3,"endColumn":44},{"ruleId":"210","severity":1,"message":"222","line":4,"column":31,"nodeType":"212","messageId":"213","endLine":4,"endColumn":36},{"ruleId":"210","severity":1,"message":"236","line":91,"column":20,"nodeType":"212","messageId":"213","endLine":91,"endColumn":28},{"ruleId":"206","replacedBy":"237"},{"ruleId":"208","replacedBy":"238"},{"ruleId":"210","severity":1,"message":"239","line":4,"column":41,"nodeType":"212","messageId":"213","endLine":4,"endColumn":47},{"ruleId":"206","replacedBy":"240"},{"ruleId":"208","replacedBy":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'LinkContainer' is defined but never used.","'midtransPay' is defined but never used.","'orderId' is assigned a value but never used.","'successDeliver' is assigned a value but never used.","'addDecimals' is assigned a value but never used.","'midtransHandler' is assigned a value but never used.","'Table' is defined but never used.","'Image' is defined but never used.","'Card' is defined but never used.","'shippingAddress' is assigned a value but never used.","'allShippingAction' is assigned a value but never used.","'shippingCost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cityAllAction' and 'provAllAction'. Either include them or remove the dependency array.","ArrayExpression",["244"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Link' is defined but never used.","'userInfo' is assigned a value but never used.",["242"],["243"],"'string' is assigned a value but never used.",["242"],["243"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [cityAllAction, provAllAction]",{"range":"247","text":"248"},[1705,1707],"[cityAllAction, provAllAction]"]